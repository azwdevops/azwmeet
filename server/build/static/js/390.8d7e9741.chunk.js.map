{"version":3,"file":"static/js/390.8d7e9741.chunk.js","mappings":"2IAGA,MAaA,EAbsBA,IAElB,SAAC,IAAD,CACEC,KAAMD,EAAME,OACZC,SAAS,KACTC,MAAO,CAAED,SAAQ,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAOG,SAAUE,OAAQ,QAC5CC,WAAS,EAJX,SAMGN,EAAMO,Y,+HCHb,MA4FA,GAAeC,EAAAA,EAAAA,KAfUC,IAAW,IAAD,MACjC,MAAO,CACLC,OAAM,OAAED,QAAF,IAAEA,GAAF,UAAEA,EAAOE,YAAT,iBAAE,EAAaC,YAAf,aAAE,EAAmBC,GAC3BC,QAAO,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAOM,cAAT,aAAE,EAAeD,YAIAE,IACnB,CACLC,aAAc,IAAMD,EAAS,CAAEE,KAAMC,EAAAA,KACrCC,cAAe,CAACV,EAAQW,EAAMC,IAC5BN,GAASO,EAAAA,EAAAA,GAAeb,EAAQW,EAAMC,OAI5C,EA5FoBtB,IAClB,MAAM,OAAEU,EAAF,eAAUc,EAAV,QAA0BV,GAAYd,GACtC,cAAEoB,EAAF,aAAiBH,EAAjB,kBAA+BQ,GAAsBzB,GAEpD0B,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,CACnDC,WAAY,GACZC,SAAU,MAGN,WAAED,EAAF,SAAcC,GAAaJ,EAE3BK,EAAgBC,IACpBL,EAAkB,IAAKD,EAAgB,CAACM,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,SAG7Db,EAAY,MAChBc,EAAAA,EAAAA,IAAgBV,IAgBlB,OACE,SAAC,IAAD,CAAcxB,OAAQsB,EAAgBrB,SAAS,QAA/C,UACE,kBACEkC,UAAU,SACVC,SAZgBN,IAEpB,GADAA,EAAEO,kBACEC,EAAAA,EAAAA,IAAQd,GACV,OAAOe,OAAOC,MAAM,8BAEtBzB,IACAG,EAAcV,EAAQ,IAAKgB,GAAkBJ,IAOzCT,GAAIC,EAAU,iBAAmB,GAHnC,WAKE,mDACA,iBAAKuB,UAAU,cAAf,WACE,6BACE,kBAAOM,QAAQ,GAAf,yBACA,kBACEzB,KAAK,iBACLgB,KAAK,aACLU,SAAUb,EACVI,MAAON,QAGX,6BACE,kBAAOc,QAAQ,GAAf,iCACA,kBACEzB,KAAK,SACLgB,KAAK,WACLU,SAAUb,EACVI,MAAOL,EACPe,IAAI,YAIT/B,IACC,SAAC,IAAD,CACEV,MAAO,CAAE0C,SAAU,WAAYC,WAAY,UAG/C,iBAAKV,UAAU,gBAAf,WACE,mBAAQnB,KAAK,SAAS8B,QAhDV,KAClB1B,IACAG,GAAkB,IA8CZ,oBAGA,mBAAQP,KAAK,SAAb,gC,0CC7EH,MAAMsB,EAAWS,IACtB,IAAK,MAAMC,KAAKD,EACd,GAAuB,KAAnB,UAAGA,EAAOC,IACZ,OAAO,EAGX,OAAO,GAIId,EAAmBa,IAC9B,IAAK,MAAMC,KAAKD,EACdA,EAAOC,GAAK","sources":["components/common/MediumDialog.js","pages/SystemAdmin/Meetings/components/AddMeeting.js","shared/sharedFunctions.js"],"sourcesContent":["// material ui items\nimport Dialog from \"@mui/material/Dialog\";\n\nconst MediumDialog = (props) => {\n  return (\n    <Dialog\n      open={props.isOpen}\n      maxWidth=\"md\"\n      style={{ maxWidth: props?.maxWidth, margin: \"auto\" }}\n      fullWidth\n    >\n      {props.children}\n    </Dialog>\n  );\n};\n\nexport default MediumDialog;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport MediumDialog from \"../../../../components/common/MediumDialog\";\nimport { create_meeting } from \"../../../../redux/actions/meeting\";\nimport { START_LOADING } from \"../../../../redux/actions/types\";\nimport { ifEmpty, resetFormValues } from \"../../../../shared/sharedFunctions\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nconst AddMeeting = (props) => {\n  const { userId, openAddMeeting, loading } = props;\n  const { createMeeting, startLoading, setOpenAddMeeting } = props;\n\n  const [meetingDetails, setMeetingDetails] = useState({\n    start_time: \"\",\n    duration: \"\",\n  });\n\n  const { start_time, duration } = meetingDetails;\n\n  const handleChange = (e) => {\n    setMeetingDetails({ ...meetingDetails, [e.target.name]: e.target.value });\n  };\n\n  const resetForm = () => {\n    resetFormValues(meetingDetails);\n  };\n\n  const handleClose = () => {\n    resetForm();\n    setOpenAddMeeting(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (ifEmpty(meetingDetails)) {\n      return window.alert(\"Please fill in all details\");\n    }\n    startLoading();\n    createMeeting(userId, { ...meetingDetails }, resetForm);\n  };\n  return (\n    <MediumDialog isOpen={openAddMeeting} maxWidth=\"900px\">\n      <form\n        className=\"dialog\"\n        onSubmit={handleSubmit}\n        id={loading ? \"formSubmitting\" : \"\"}\n      >\n        <h3>Enter meeting details</h3>\n        <div className=\"dialog__row\">\n          <span>\n            <label htmlFor=\"\">Start Time</label>\n            <input\n              type=\"datetime-local\"\n              name=\"start_time\"\n              onChange={handleChange}\n              value={start_time}\n            />\n          </span>\n          <span>\n            <label htmlFor=\"\">Duration (Minutes)</label>\n            <input\n              type=\"number\"\n              name=\"duration\"\n              onChange={handleChange}\n              value={duration}\n              min=\"1\"\n            />\n          </span>\n        </div>\n        {loading && (\n          <CircularProgress\n            style={{ position: \"absolute\", marginLeft: \"45%\" }}\n          />\n        )}\n        <div className=\"form__Buttons\">\n          <button type=\"button\" onClick={handleClose}>\n            Close\n          </button>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </MediumDialog>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state?.auth?.user?.id,\n    loading: state?.shared?.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startLoading: () => dispatch({ type: START_LOADING }),\n    createMeeting: (userId, body, resetForm) =>\n      dispatch(create_meeting(userId, body, resetForm)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMeeting);\n","// check if any field in an object is empty\nexport const ifEmpty = (object) => {\n  for (const i in object) {\n    if (`${object[i]}` === \"\") {\n      return true;\n    }\n  }\n  return false;\n};\n\n// function to reset form values to blank\nexport const resetFormValues = (object) => {\n  for (const i in object) {\n    object[i] = \"\";\n  }\n};\n\n// function to get max date to display on user entry form\nexport const maxDate = () => {\n  const today = new Date();\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\n  const month =\n    today.getMonth() + 1 < 10\n      ? \"0\" + (today.getMonth() + 1)\n      : today.getMonth() + 1;\n  const max_date = today.getFullYear() + \"-\" + month + \"-\" + day;\n  return max_date;\n};\n\n// function to get min date to display on exam date\nexport const minDate = () => {\n  const today = new Date();\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\n  const month =\n    today.getMonth() + 1 < 10\n      ? \"0\" + (today.getMonth() + 1)\n      : today.getMonth() + 1;\n  const min_date = today.getFullYear() + \"-\" + month + \"-\" + day;\n  return min_date;\n};\n"],"names":["props","open","isOpen","maxWidth","style","margin","fullWidth","children","connect","state","userId","auth","user","id","loading","shared","dispatch","startLoading","type","START_LOADING","createMeeting","body","resetForm","create_meeting","openAddMeeting","setOpenAddMeeting","meetingDetails","setMeetingDetails","useState","start_time","duration","handleChange","e","target","name","value","resetFormValues","className","onSubmit","preventDefault","ifEmpty","window","alert","htmlFor","onChange","min","position","marginLeft","onClick","object","i"],"sourceRoot":""}