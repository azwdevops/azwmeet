{"version":3,"file":"static/js/685.48c092e7.chunk.js","mappings":"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","sources":["components/common/MediumDialog.js","components/users/Signup.js","shared/sharedFunctions.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["// material ui items\nimport Dialog from \"@mui/material/Dialog\";\n\nconst MediumDialog = (props) => {\n  return (\n    <Dialog\n      open={props.isOpen}\n      maxWidth=\"md\"\n      style={{ maxWidth: props?.maxWidth, margin: \"auto\" }}\n      fullWidth\n    >\n      {props.children}\n    </Dialog>\n  );\n};\n\nexport default MediumDialog;\n","// import installed packages\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import styles\n\n// import material ui items\nimport CircularProgress from \"@mui/material/CircularProgress\";\n// import shared/global items\nimport globals from \"../../shared/globals\";\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\n// import components/pages\nimport MediumDialog from \"../common/MediumDialog\";\n// import redux API\nimport { CLOSE_SIGNUP, START_LOADING } from \"../../redux/actions/types\";\nimport { signup_user } from \"../../redux/actions/auth\";\n\nconst Signup = (props) => {\n  const { loading, signupForm } = props; // get state from props\n  const { startLoading, closeSignup, signupUser } = props; // get dispatch actions from props\n\n  // internal state\n  const [newUser, setNewUser] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n  });\n\n  //############### destructuring code ###################//\n  const { first_name, last_name, username, email, password, confirm_password } =\n    newUser;\n  const { fillFields } = globals;\n\n  //#################end of destructuring ###########//\n\n  const resetForm = () => {\n    resetFormValues(newUser);\n  };\n\n  const closeSignupForm = () => {\n    closeSignup();\n    resetForm();\n  };\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    if (ifEmpty(newUser)) {\n      return window.alert(fillFields);\n    }\n    // confirm passwords match\n    if (password !== confirm_password) {\n      return window.alert(\"Passwords should match\");\n    }\n\n    // dispatch the loading action\n    startLoading();\n\n    // call the signup action creator\n    signupUser(newUser, resetForm);\n  };\n\n  const handleChange = (e) => {\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\n  };\n  return (\n    <MediumDialog isOpen={signupForm}>\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\n        <h3>Create new account</h3>\n        <div className=\"dialog__row\">\n          <span>\n            <label htmlFor=\"\">First Name</label>\n            <input\n              type=\"text\"\n              name=\"first_name\"\n              value={first_name}\n              onChange={handleChange}\n              required\n            />\n          </span>\n          <span>\n            <label htmlFor=\"\">Last Name</label>\n            <input\n              type=\"text\"\n              name=\"last_name\"\n              value={last_name}\n              onChange={handleChange}\n              required\n            />\n          </span>\n        </div>\n        {loading && (\n          <CircularProgress\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\n          />\n        )}\n        <div className=\"dialog__row\">\n          <span>\n            <label htmlFor=\"\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              required\n            />\n          </span>\n          <span>\n            <label htmlFor=\"\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              username={email}\n              onChange={handleChange}\n              required\n            />\n          </span>\n        </div>\n\n        <div className=\"dialog__row\">\n          <span>\n            <label htmlFor=\"\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              required\n            />\n          </span>\n          <span>\n            <label htmlFor=\"\">Confirm Password</label>\n            <input\n              type=\"password\"\n              name=\"confirm_password\"\n              value={confirm_password}\n              onChange={handleChange}\n              required\n            />\n          </span>\n        </div>\n        <div className=\"form__Buttons\">\n          <button type=\"button\" onClick={closeSignupForm}>\n            Close\n          </button>\n          <button type=\"submit\" onClick={handleSignup}>\n            Sign Up\n          </button>\n        </div>\n        <div className=\"extra__formButtons\"></div>\n      </form>\n    </MediumDialog>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    signupForm: state.auth.signupForm,\n    loading: state.shared?.loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startLoading: () => dispatch({ type: START_LOADING }),\n    closeSignup: () => dispatch({ type: CLOSE_SIGNUP }),\n    signupUser: (newUser, resetForm) =>\n      dispatch(signup_user(newUser, resetForm)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","// check if any field in an object is empty\nexport const ifEmpty = (object) => {\n  for (const i in object) {\n    if (`${object[i]}` === \"\") {\n      return true;\n    }\n  }\n  return false;\n};\n\n// function to reset form values to blank\nexport const resetFormValues = (object) => {\n  for (const i in object) {\n    object[i] = \"\";\n  }\n};\n\n// function to get max date to display on user entry form\nexport const maxDate = () => {\n  const today = new Date();\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\n  const month =\n    today.getMonth() + 1 < 10\n      ? \"0\" + (today.getMonth() + 1)\n      : today.getMonth() + 1;\n  const max_date = today.getFullYear() + \"-\" + month + \"-\" + day;\n  return max_date;\n};\n\n// function to get min date to display on exam date\nexport const minDate = () => {\n  const today = new Date();\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\n  const month =\n    today.getMonth() + 1 < 10\n      ? \"0\" + (today.getMonth() + 1)\n      : today.getMonth() + 1;\n  const min_date = today.getFullYear() + \"-\" + month + \"-\" + day;\n  return min_date;\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { createElement, useContext, useRef, useLayoutEffect, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext } from './emotion-element-699e6908.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-699e6908.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { insertStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.7.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.cjs.js\": \"./dist/emotion-react.browser.cjs.js\",\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"mitchellhamilton <mitchell@mitchellhamilton.me>\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.13.10\",\n\t\t\"@emotion/cache\": \"^11.7.1\",\n\t\t\"@emotion/serialize\": \"^1.0.2\",\n\t\t\"@emotion/sheet\": \"^1.1.0\",\n\t\t\"@emotion/utils\": \"^1.0.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.2.5\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\t\"@babel/core\": \"^7.0.0\",\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@babel/core\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@babel/core\": \"^7.13.10\",\n\t\t\"@emotion/css\": \"11.7.1\",\n\t\t\"@emotion/css-prettifier\": \"1.0.1\",\n\t\t\"@emotion/server\": \"11.4.0\",\n\t\t\"@emotion/styled\": \"11.6.0\",\n\t\t\"@types/react\": \"^16.9.11\",\n\t\tdtslint: \"^0.3.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\"\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useLayoutEffect(function () {\n    var key = cache.key + \"-global\";\n    var sheet = new StyleSheet({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useLayoutEffect(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n\n    {\n      insertStyles(cache, serialized, false);\n    }\n\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  var possiblyStyleElement = /*#__PURE__*/createElement(Noop, null);\n\n\n  return /*#__PURE__*/createElement(Fragment, null, possiblyStyleElement, ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["props","open","isOpen","maxWidth","style","margin","fullWidth","children","connect","state","signupForm","auth","loading","shared","dispatch","startLoading","type","START_LOADING","closeSignup","CLOSE_SIGNUP","signupUser","newUser","resetForm","signup_user","setNewUser","useState","first_name","last_name","username","email","password","confirm_password","fillFields","globals","resetFormValues","handleChange","e","target","name","value","className","id","htmlFor","onChange","required","position","marginLeft","onClick","preventDefault","ifEmpty","window","alert","object","i","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","css","_len","arguments","length","args","Array","_key","serializeStyles","keyframes","insertable","apply","styles","anim","toString","this","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","ownerState","root","variant","capitalize","color","theme","_extends","display","transition","transitions","create","palette","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","React","inProps","ref","useThemeProps","size","thickness","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}