{"version":3,"file":"static/js/835.4ed1c7f4.chunk.js","mappings":"yMAmBA,MA+EA,GAAeA,EAAAA,EAAAA,KAhBUC,IAAW,IAAD,IACjC,MAAO,CACLC,QAAO,UAAED,EAAME,cAAR,aAAE,EAAcD,QACvBE,qBAAoB,UAAEH,EAAMI,YAAR,aAAE,EAAYD,yBAIVE,IACnB,CACLC,aAAc,IAAMD,EAAS,CAAEE,KAAMC,EAAAA,KACrCC,sBAAuB,IAAMJ,EAAS,CAAEE,KAAMG,EAAAA,KAC9CC,iBAAkB,CAACC,EAAOC,IACxBR,GAASS,EAAAA,EAAAA,IAAkBF,EAAOC,OAIxC,EA/E2BE,IACzB,MAAM,QAAEd,EAAF,qBAAWE,GAAyBY,GACpC,aAAET,EAAF,sBAAgBG,EAAhB,iBAAuCE,GAAqBI,GAE3DH,EAAOI,IAAYC,EAAAA,EAAAA,UAAS,IAK7BJ,EAAY,KAChBG,EAAS,KAmBX,OACE,SAAC,IAAD,CACEE,OAAQf,EADV,UAGE,kBAAMgB,UAAU,SAASC,GAAInB,EAAU,iBAAmB,GAA1D,WACE,oEACCA,IACC,SAAC,IAAD,CACEoB,MAAO,CAAEC,SAAU,WAAYC,WAAY,UAG/C,iBAAKJ,UAAU,wBAAf,WACE,kBAAOK,QAAQ,GAAf,oBACA,kBACEjB,KAAK,QACLkB,SAAWC,GAAMV,EAASU,EAAEC,OAAOC,OACnCA,MAAOhB,EACPiB,UAAQ,QAIZ,iBAAKV,UAAU,gBAAf,WACE,mBAAQZ,KAAK,SAASuB,QAtCI,KAChCrB,IACAI,KAoCM,oBAGA,mBAAQN,KAAK,SAASuB,QAnCSJ,IAErC,GADAA,EAAEK,iBACmB,KAAjBnB,EAAMoB,OACR,OAAOC,OAAOC,MAAM,kBAEtB5B,IAEAK,EAAiBC,EAAOC,IA4BlB","sources":["components/users/ReactivateAccount.js"],"sourcesContent":["// import installed packages\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import styles\n\n// import material ui items\nimport CircularProgress from \"@mui/material/CircularProgress\";\n// import shared/global items\n// import components/pages\nimport MinDialog from \"../common/MinDialog\";\n\n// import redux API\n\nimport {\n  CLOSE_RESEND_ACTIVATION,\n  START_LOADING,\n} from \"../../redux/actions/types\";\nimport { resend_activation } from \"../../redux/actions/auth\";\n\nconst ReactivateAccount = (props) => {\n  const { loading, resendActivationForm } = props; // extract state from props\n  const { startLoading, closeResendActivation, resendActivation } = props; // extract dispatch actions from props\n\n  const [email, setEmail] = useState(\"\");\n\n  // ###################### destructuring to make code organized ######################### //\n  // ###################### end destructuring to make code organized ######################### //\n\n  const resetForm = () => {\n    setEmail(\"\");\n  };\n\n  const closeResendActivationForm = () => {\n    closeResendActivation();\n    resetForm();\n  };\n\n  // function to resend confirmation link\n  const resendAccountConfirmationLink = (e) => {\n    e.preventDefault();\n    if (email.trim() === \"\") {\n      return window.alert(\"Email required\");\n    }\n    startLoading();\n    // call the signup action creator\n    resendActivation(email, resetForm);\n  };\n\n  return (\n    <MinDialog\n      isOpen={resendActivationForm} // since the styles of min width applied globally is affecting the reactivate form width, apply inline styles\n    >\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\n        <h3>Enter email to resend confirmation link</h3>\n        {loading && (\n          <CircularProgress\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\n          />\n        )}\n        <div className=\"dialog__rowSingleItem\">\n          <label htmlFor=\"\">Email</label>\n          <input\n            type=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            required\n          />\n        </div>\n\n        <div className=\"form__Buttons\">\n          <button type=\"button\" onClick={closeResendActivationForm}>\n            Close\n          </button>\n          <button type=\"submit\" onClick={resendAccountConfirmationLink}>\n            Send\n          </button>\n        </div>\n      </form>\n    </MinDialog>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.shared?.loading,\n    resendActivationForm: state.auth?.resendActivationForm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startLoading: () => dispatch({ type: START_LOADING }),\n    closeResendActivation: () => dispatch({ type: CLOSE_RESEND_ACTIVATION }),\n    resendActivation: (email, resetForm) =>\n      dispatch(resend_activation(email, resetForm)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactivateAccount);\n"],"names":["connect","state","loading","shared","resendActivationForm","auth","dispatch","startLoading","type","START_LOADING","closeResendActivation","CLOSE_RESEND_ACTIVATION","resendActivation","email","resetForm","resend_activation","props","setEmail","useState","isOpen","className","id","style","position","marginLeft","htmlFor","onChange","e","target","value","required","onClick","preventDefault","trim","window","alert"],"sourceRoot":""}