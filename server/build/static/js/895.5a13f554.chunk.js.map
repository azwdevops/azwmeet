{"version":3,"file":"static/js/895.5a13f554.chunk.js","mappings":"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","sources":["pages/SystemAdmin/Meetings/Meetings.js","redux/actions/meeting.js"],"sourcesContent":["import React, { useEffect, useState, lazy, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { get_meetings } from \"../../../redux/actions/meeting\";\nimport { START_LOADING } from \"../../../redux/actions/types\";\nimport moment from \"moment\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nconst AddMeeting = lazy(() => import(\"./components/AddMeeting\"));\n\nconst Meetings = (props) => {\n  const { meetings, loading, userId } = props;\n  const { startLoading, getMeetings } = props;\n\n  const [openAddMeeting, setOpenAddMeeting] = useState(false);\n\n  useEffect(() => {\n    if (userId && meetings?.length === 0) {\n      startLoading();\n      getMeetings(userId);\n    }\n  }, [startLoading, userId, getMeetings, meetings?.length]);\n  return (\n    <>\n      <div className=\"table__parent\">\n        <div className=\"table__parentHeader\">\n          <button\n            type=\"button\"\n            className=\"add__button\"\n            onClick={() => setOpenAddMeeting(true)}\n          >\n            Add Meeting\n          </button>\n        </div>\n        <br />\n        {loading && (\n          <CircularProgress\n            style={{ position: \"absolute\", marginLeft: \"45%\" }}\n          />\n        )}\n        {meetings?.length > 0 ? (\n          <table className=\"table__listing\">\n            <tr className=\"table__listingHeader\">\n              <th>Meeting Number</th>\n              <th>Start Time</th>\n              <th>Duration</th>\n              <th>Status</th>\n            </tr>\n            {meetings?.map((meeting) => (\n              <tr className=\"table__listingItem\" key={meeting?.number}>\n                <td>{meeting?.meeting_number}</td>\n                <td>{moment(meeting?.start_time).format(\"LLL\")}</td>\n                <td>{meeting?.duration}</td>\n                <td>\n                  {meeting?.status === \"start now\" ? (\n                    <Link\n                      to={`/live-meeting/${meeting?.meeting_number}/`}\n                      className=\"dodgerblue bd button__sp\"\n                    >\n                      Start Now\n                    </Link>\n                  ) : (\n                    <span>Not started</span>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </table>\n        ) : (\n          <h4 className=\"not__available\">No meetings added yet</h4>\n        )}\n      </div>\n      {/* child components */}\n      <Suspense fallback={<div>Loading...</div>}>\n        {openAddMeeting && (\n          <AddMeeting\n            openAddMeeting={openAddMeeting}\n            setOpenAddMeeting={setOpenAddMeeting}\n          />\n        )}\n      </Suspense>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state?.auth?.user?.id,\n    loading: state?.shared?.loading,\n    meetings: state?.meeting?.meetings,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    startLoading: () => dispatch({ type: START_LOADING }),\n    getMeetings: (userId) => dispatch(get_meetings(userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Meetings);\n","import * as actionTypes from \"./types\";\nimport * as api from \"../../api\";\n\nimport { showError, stopLoading } from \"./shared\";\n\n// action to create a new meeting\nexport const create_meeting = (userId, body, resetForm) => async (dispatch) => {\n  await api\n    .createMeeting(userId, body)\n    .then((res) => {\n      dispatch({\n        type: actionTypes.NEW_MEETING,\n        payload: res?.data?.new_meeting_data,\n      });\n      resetForm();\n      window.alert(res?.data?.detail);\n    })\n    .catch((err) => showError(err))\n    .finally(() => stopLoading(dispatch));\n};\n\n// action for system admin to get all meetings\nexport const get_meetings = (userId) => async (dispatch) => {\n  await api\n    .getMeetings(userId)\n    .then((res) => {\n      dispatch({\n        type: actionTypes.SET_MEETINGS,\n        payload: res?.data?.meetings_data,\n      });\n    })\n    .catch((err) => showError(err))\n    .finally(() => stopLoading(dispatch));\n};\n"],"names":["AddMeeting","lazy","connect","state","userId","auth","user","id","loading","shared","meetings","meeting","dispatch","startLoading","type","START_LOADING","getMeetings","get_meetings","props","openAddMeeting","setOpenAddMeeting","useState","useEffect","length","className","onClick","style","position","marginLeft","map","meeting_number","moment","start_time","format","duration","status","to","number","Suspense","fallback","create_meeting","body","resetForm","async","api","then","res","actionTypes","payload","data","new_meeting_data","window","alert","detail","catch","err","showError","finally","stopLoading","meetings_data"],"sourceRoot":""}